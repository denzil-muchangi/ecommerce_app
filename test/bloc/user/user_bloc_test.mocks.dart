// Mocks generated by Mockito 5.4.6 from annotations
// in ecommerce_app/test/bloc/user/user_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:ecommerce_app/data/repositories/user_repository.dart' as _i4;
import 'package:ecommerce_app/domain/entities/address.dart' as _i3;
import 'package:ecommerce_app/domain/entities/user.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAddress_1 extends _i1.SmartFake implements _i3.Address {
  _FakeAddress_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i4.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.User> getUserProfile(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserProfile, [userId]),
            returnValue: _i5.Future<_i2.User>.value(
              _FakeUser_0(this, Invocation.method(#getUserProfile, [userId])),
            ),
          )
          as _i5.Future<_i2.User>);

  @override
  _i5.Future<_i2.User> updateUserProfile(
    String? userId,
    String? name,
    String? email,
    String? phone,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [userId, name, email, phone]),
            returnValue: _i5.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#updateUserProfile, [
                  userId,
                  name,
                  email,
                  phone,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.User>);

  @override
  _i5.Future<List<_i3.Address>> getUserAddresses(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserAddresses, [userId]),
            returnValue: _i5.Future<List<_i3.Address>>.value(<_i3.Address>[]),
          )
          as _i5.Future<List<_i3.Address>>);

  @override
  _i5.Future<_i3.Address> addUserAddress(
    String? userId,
    _i3.Address? address,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addUserAddress, [userId, address]),
            returnValue: _i5.Future<_i3.Address>.value(
              _FakeAddress_1(
                this,
                Invocation.method(#addUserAddress, [userId, address]),
              ),
            ),
          )
          as _i5.Future<_i3.Address>);

  @override
  _i5.Future<_i3.Address> updateUserAddress(
    String? userId,
    _i3.Address? address,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserAddress, [userId, address]),
            returnValue: _i5.Future<_i3.Address>.value(
              _FakeAddress_1(
                this,
                Invocation.method(#updateUserAddress, [userId, address]),
              ),
            ),
          )
          as _i5.Future<_i3.Address>);

  @override
  _i5.Future<void> deleteUserAddress(String? userId, String? addressId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteUserAddress, [userId, addressId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setDefaultAddress(String? userId, String? addressId) =>
      (super.noSuchMethod(
            Invocation.method(#setDefaultAddress, [userId, addressId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i2.User>> getAllUsers() =>
      (super.noSuchMethod(
            Invocation.method(#getAllUsers, []),
            returnValue: _i5.Future<List<_i2.User>>.value(<_i2.User>[]),
          )
          as _i5.Future<List<_i2.User>>);

  @override
  _i5.Future<_i2.User> updateUserRole(String? userId, String? role) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserRole, [userId, role]),
            returnValue: _i5.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#updateUserRole, [userId, role]),
              ),
            ),
          )
          as _i5.Future<_i2.User>);
}
